{
  "openapi": "3.0.0",
  "paths": {
    "/api/users": {
      "post": {
        "operationId": "UserController_create",
        "summary": "Create a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user has been successfully created."
          },
          "400": {
            "description": "Invalid input."
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{userId}": {
      "get": {
        "operationId": "UserController_findOne",
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the user data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{userId}/avatar": {
      "get": {
        "operationId": "UserController_getAvatar",
        "summary": "Get user avatar by user ID",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the avatar image in base64 format."
          },
          "404": {
            "description": "Avatar not found."
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteAvatar",
        "summary": "Delete user avatar by user ID",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar successfully deleted."
          },
          "404": {
            "description": "Avatar not found."
          }
        },
        "tags": [
          "users"
        ]
      }
    }
  },
  "info": {
    "title": "User Management API",
    "description": "API for managing users and their avatars",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address of the user",
            "example": "user@example.com"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the user",
            "example": "Doe"
          },
          "avatar": {
            "type": "string",
            "description": "The URL of the user's avatar image",
            "example": "https://example.com/avatar.png"
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "avatar"
        ]
      },
      "GetUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address of the user",
            "example": "user@example.com"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of the user",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the user",
            "example": "Doe"
          },
          "avatar": {
            "type": "string",
            "description": "The URL of the user's avatar image",
            "example": "https://example.com/avatar.png"
          },
          "id": {
            "type": "string",
            "description": "User id",
            "example": 102
          }
        },
        "required": [
          "email",
          "first_name",
          "last_name",
          "avatar",
          "id"
        ]
      }
    }
  }
}